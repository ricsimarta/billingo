/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Currency} from './Currency';
import {Entitlement} from './Entitlement';
import {Vat} from './Vat';

/**
 * The Product model module.
 * @module model/Product
 * @version 3.0.14
 */
export class Product {
  /**
   * Constructs a new <code>Product</code>.
   * @alias module:model/Product
   * @class
   * @param name {String} 
   * @param currency {module:model/Currency} 
   * @param vat {module:model/Vat} 
   * @param unit {String} 
   */
  constructor(name, currency, vat, unit) {
    this.name = name;
    this.currency = currency;
    this.vat = vat;
    this.unit = unit;
  }

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Product} obj Optional instance to populate.
   * @return {module:model/Product} The populated <code>Product</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Product();
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
      if (data.hasOwnProperty('currency'))
        obj.currency = Currency.constructFromObject(data['currency']);
      if (data.hasOwnProperty('vat'))
        obj.vat = Vat.constructFromObject(data['vat']);
      if (data.hasOwnProperty('net_unit_price'))
        obj.netUnitPrice = ApiClient.convertToType(data['net_unit_price'], 'Number');
      if (data.hasOwnProperty('unit'))
        obj.unit = ApiClient.convertToType(data['unit'], 'String');
      if (data.hasOwnProperty('general_ledger_number'))
        obj.generalLedgerNumber = ApiClient.convertToType(data['general_ledger_number'], 'String');
      if (data.hasOwnProperty('general_ledger_taxcode'))
        obj.generalLedgerTaxcode = ApiClient.convertToType(data['general_ledger_taxcode'], 'String');
      if (data.hasOwnProperty('entitlement'))
        obj.entitlement = Entitlement.constructFromObject(data['entitlement']);
    }
    return obj;
  }
}

/**
 * @member {Number} id
 */
Product.prototype.id = undefined;

/**
 * @member {String} name
 */
Product.prototype.name = undefined;

/**
 * @member {String} comment
 */
Product.prototype.comment = undefined;

/**
 * @member {module:model/Currency} currency
 */
Product.prototype.currency = undefined;

/**
 * @member {module:model/Vat} vat
 */
Product.prototype.vat = undefined;

/**
 * @member {Number} netUnitPrice
 */
Product.prototype.netUnitPrice = undefined;

/**
 * @member {String} unit
 */
Product.prototype.unit = undefined;

/**
 * @member {String} generalLedgerNumber
 */
Product.prototype.generalLedgerNumber = undefined;

/**
 * @member {String} generalLedgerTaxcode
 */
Product.prototype.generalLedgerTaxcode = undefined;

/**
 * @member {module:model/Entitlement} entitlement
 */
Product.prototype.entitlement = undefined;

