/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Currency} from './Currency';
import {DocumentType} from './DocumentType';
import {PaymentMethod} from './PaymentMethod';

/**
 * The ReceiptInsert model module.
 * @module model/ReceiptInsert
 * @version 3.0.14
 */
export class ReceiptInsert {
  /**
   * Constructs a new <code>ReceiptInsert</code>.
   * @alias module:model/ReceiptInsert
   * @class
   * @param blockId {Number} 
   * @param type {module:model/DocumentType} 
   * @param paymentMethod {module:model/PaymentMethod} 
   * @param currency {module:model/Currency} 
   */
  constructor(blockId, type, paymentMethod, currency) {
    this.blockId = blockId;
    this.type = type;
    this.paymentMethod = paymentMethod;
    this.currency = currency;
  }

  /**
   * Constructs a <code>ReceiptInsert</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ReceiptInsert} obj Optional instance to populate.
   * @return {module:model/ReceiptInsert} The populated <code>ReceiptInsert</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new ReceiptInsert();
      if (data.hasOwnProperty('vendor_id'))
        obj.vendorId = ApiClient.convertToType(data['vendor_id'], 'String');
      if (data.hasOwnProperty('partner_id'))
        obj.partnerId = ApiClient.convertToType(data['partner_id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('emails'))
        obj.emails = ApiClient.convertToType(data['emails'], ['String']);
      if (data.hasOwnProperty('block_id'))
        obj.blockId = ApiClient.convertToType(data['block_id'], 'Number');
      if (data.hasOwnProperty('type'))
        obj.type = DocumentType.constructFromObject(data['type']);
      if (data.hasOwnProperty('payment_method'))
        obj.paymentMethod = PaymentMethod.constructFromObject(data['payment_method']);
      if (data.hasOwnProperty('currency'))
        obj.currency = Currency.constructFromObject(data['currency']);
      if (data.hasOwnProperty('conversion_rate'))
        obj.conversionRate = ApiClient.convertToType(data['conversion_rate'], 'Number');
      if (data.hasOwnProperty('electronic'))
        obj.electronic = ApiClient.convertToType(data['electronic'], 'Boolean');
      if (data.hasOwnProperty('items'))
        obj.items = ApiClient.convertToType(data['items'], [OneOfReceiptInsertItemsItems]);
    }
    return obj;
  }
}

/**
 * @member {String} vendorId
 */
ReceiptInsert.prototype.vendorId = undefined;

/**
 * @member {Number} partnerId
 */
ReceiptInsert.prototype.partnerId = undefined;

/**
 * @member {String} name
 */
ReceiptInsert.prototype.name = undefined;

/**
 * @member {Array.<String>} emails
 */
ReceiptInsert.prototype.emails = undefined;

/**
 * @member {Number} blockId
 */
ReceiptInsert.prototype.blockId = undefined;

/**
 * @member {module:model/DocumentType} type
 */
ReceiptInsert.prototype.type = undefined;

/**
 * @member {module:model/PaymentMethod} paymentMethod
 */
ReceiptInsert.prototype.paymentMethod = undefined;

/**
 * @member {module:model/Currency} currency
 */
ReceiptInsert.prototype.currency = undefined;

/**
 * @member {Number} conversionRate
 */
ReceiptInsert.prototype.conversionRate = undefined;

/**
 * @member {Boolean} electronic
 * @default false
 */
ReceiptInsert.prototype.electronic = false;

/**
 * @member {Array.<Object>} items
 */
ReceiptInsert.prototype.items = undefined;

