/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Address} from './Address';
import {DocumentBankAccount} from './DocumentBankAccount';

/**
 * The DocumentOrganization model module.
 * @module model/DocumentOrganization
 * @version 3.0.14
 */
export class DocumentOrganization {
  /**
   * Constructs a new <code>DocumentOrganization</code>.
   * @alias module:model/DocumentOrganization
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DocumentOrganization</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocumentOrganization} obj Optional instance to populate.
   * @return {module:model/DocumentOrganization} The populated <code>DocumentOrganization</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocumentOrganization();
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('tax_number'))
        obj.taxNumber = ApiClient.convertToType(data['tax_number'], 'String');
      if (data.hasOwnProperty('bank_account'))
        obj.bankAccount = DocumentBankAccount.constructFromObject(data['bank_account']);
      if (data.hasOwnProperty('address'))
        obj.address = Address.constructFromObject(data['address']);
      if (data.hasOwnProperty('small_taxpayer'))
        obj.smallTaxpayer = ApiClient.convertToType(data['small_taxpayer'], 'Boolean');
      if (data.hasOwnProperty('ev_number'))
        obj.evNumber = ApiClient.convertToType(data['ev_number'], 'String');
      if (data.hasOwnProperty('eu_tax_number'))
        obj.euTaxNumber = ApiClient.convertToType(data['eu_tax_number'], 'String');
      if (data.hasOwnProperty('cash_settled'))
        obj.cashSettled = ApiClient.convertToType(data['cash_settled'], 'Boolean');
    }
    return obj;
  }
}

/**
 * @member {String} name
 */
DocumentOrganization.prototype.name = undefined;

/**
 * @member {String} taxNumber
 */
DocumentOrganization.prototype.taxNumber = undefined;

/**
 * @member {module:model/DocumentBankAccount} bankAccount
 */
DocumentOrganization.prototype.bankAccount = undefined;

/**
 * @member {module:model/Address} address
 */
DocumentOrganization.prototype.address = undefined;

/**
 * @member {Boolean} smallTaxpayer
 */
DocumentOrganization.prototype.smallTaxpayer = undefined;

/**
 * @member {String} evNumber
 */
DocumentOrganization.prototype.evNumber = undefined;

/**
 * @member {String} euTaxNumber
 */
DocumentOrganization.prototype.euTaxNumber = undefined;

/**
 * @member {Boolean} cashSettled
 */
DocumentOrganization.prototype.cashSettled = undefined;

