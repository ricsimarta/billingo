/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {BankAccount} from './BankAccount';

/**
 * The BankAccountList model module.
 * @module model/BankAccountList
 * @version 3.0.14
 */
export class BankAccountList {
  /**
   * Constructs a new <code>BankAccountList</code>.
   * A object with a data property that contains an array of up to limit bank accounts. Each entry in the array is a separate bank account object. If no more bank accounts are available, the resulting array will be empty.
   * @alias module:model/BankAccountList
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>BankAccountList</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/BankAccountList} obj Optional instance to populate.
   * @return {module:model/BankAccountList} The populated <code>BankAccountList</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new BankAccountList();
      if (data.hasOwnProperty('data'))
        obj.data = ApiClient.convertToType(data['data'], [BankAccount]);
      if (data.hasOwnProperty('total'))
        obj.total = ApiClient.convertToType(data['total'], 'Number');
      if (data.hasOwnProperty('per_page'))
        obj.perPage = ApiClient.convertToType(data['per_page'], 'Number');
      if (data.hasOwnProperty('current_page'))
        obj.currentPage = ApiClient.convertToType(data['current_page'], 'Number');
      if (data.hasOwnProperty('last_page'))
        obj.lastPage = ApiClient.convertToType(data['last_page'], 'Number');
      if (data.hasOwnProperty('prev_page_url'))
        obj.prevPageUrl = ApiClient.convertToType(data['prev_page_url'], 'String');
      if (data.hasOwnProperty('next_page_url'))
        obj.nextPageUrl = ApiClient.convertToType(data['next_page_url'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Array.<module:model/BankAccount>} data
 */
BankAccountList.prototype.data = undefined;

/**
 * @member {Number} total
 */
BankAccountList.prototype.total = undefined;

/**
 * @member {Number} perPage
 */
BankAccountList.prototype.perPage = undefined;

/**
 * @member {Number} currentPage
 */
BankAccountList.prototype.currentPage = undefined;

/**
 * @member {Number} lastPage
 */
BankAccountList.prototype.lastPage = undefined;

/**
 * @member {String} prevPageUrl
 */
BankAccountList.prototype.prevPageUrl = undefined;

/**
 * @member {String} nextPageUrl
 */
BankAccountList.prototype.nextPageUrl = undefined;

