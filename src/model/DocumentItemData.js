/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';

/**
 * The DocumentItemData model module.
 * @module model/DocumentItemData
 * @version 3.0.14
 */
export class DocumentItemData {
  /**
   * Constructs a new <code>DocumentItemData</code>.
   * @alias module:model/DocumentItemData
   * @class
   * @param productId {Number} 
   * @param quantity {Number} 
   */
  constructor(productId, quantity) {
    this.productId = productId;
    this.quantity = quantity;
  }

  /**
   * Constructs a <code>DocumentItemData</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocumentItemData} obj Optional instance to populate.
   * @return {module:model/DocumentItemData} The populated <code>DocumentItemData</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocumentItemData();
      if (data.hasOwnProperty('product_id'))
        obj.productId = ApiClient.convertToType(data['product_id'], 'Number');
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} productId
 */
DocumentItemData.prototype.productId = undefined;

/**
 * @member {Number} quantity
 */
DocumentItemData.prototype.quantity = undefined;

/**
 * @member {String} comment
 */
DocumentItemData.prototype.comment = undefined;

// Implement OneOfDocumentInsertItemsItems interface:
// Implement OneOfModificationDocumentInsertItemsItems interface:
