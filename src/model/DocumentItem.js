/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from '../ApiClient';
import {Entitlement} from './Entitlement';
import {Vat} from './Vat';

/**
 * The DocumentItem model module.
 * @module model/DocumentItem
 * @version 3.0.14
 */
export class DocumentItem {
  /**
   * Constructs a new <code>DocumentItem</code>.
   * @alias module:model/DocumentItem
   * @class
   */
  constructor() {
  }

  /**
   * Constructs a <code>DocumentItem</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DocumentItem} obj Optional instance to populate.
   * @return {module:model/DocumentItem} The populated <code>DocumentItem</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DocumentItem();
      if (data.hasOwnProperty('product_id'))
        obj.productId = ApiClient.convertToType(data['product_id'], 'Number');
      if (data.hasOwnProperty('name'))
        obj.name = ApiClient.convertToType(data['name'], 'String');
      if (data.hasOwnProperty('net_unit_amount'))
        obj.netUnitAmount = ApiClient.convertToType(data['net_unit_amount'], 'Number');
      if (data.hasOwnProperty('quantity'))
        obj.quantity = ApiClient.convertToType(data['quantity'], 'Number');
      if (data.hasOwnProperty('unit'))
        obj.unit = ApiClient.convertToType(data['unit'], 'String');
      if (data.hasOwnProperty('net_amount'))
        obj.netAmount = ApiClient.convertToType(data['net_amount'], 'Number');
      if (data.hasOwnProperty('gross_amount'))
        obj.grossAmount = ApiClient.convertToType(data['gross_amount'], 'Number');
      if (data.hasOwnProperty('vat'))
        obj.vat = Vat.constructFromObject(data['vat']);
      if (data.hasOwnProperty('vat_amount'))
        obj.vatAmount = ApiClient.convertToType(data['vat_amount'], 'Number');
      if (data.hasOwnProperty('entitlement'))
        obj.entitlement = Entitlement.constructFromObject(data['entitlement']);
      if (data.hasOwnProperty('comment'))
        obj.comment = ApiClient.convertToType(data['comment'], 'String');
    }
    return obj;
  }
}

/**
 * @member {Number} productId
 */
DocumentItem.prototype.productId = undefined;

/**
 * @member {String} name
 */
DocumentItem.prototype.name = undefined;

/**
 * @member {Number} netUnitAmount
 */
DocumentItem.prototype.netUnitAmount = undefined;

/**
 * @member {Number} quantity
 */
DocumentItem.prototype.quantity = undefined;

/**
 * @member {String} unit
 */
DocumentItem.prototype.unit = undefined;

/**
 * @member {Number} netAmount
 */
DocumentItem.prototype.netAmount = undefined;

/**
 * @member {Number} grossAmount
 */
DocumentItem.prototype.grossAmount = undefined;

/**
 * @member {module:model/Vat} vat
 */
DocumentItem.prototype.vat = undefined;

/**
 * @member {Number} vatAmount
 */
DocumentItem.prototype.vatAmount = undefined;

/**
 * @member {module:model/Entitlement} entitlement
 */
DocumentItem.prototype.entitlement = undefined;

/**
 * @member {String} comment
 */
DocumentItem.prototype.comment = undefined;

