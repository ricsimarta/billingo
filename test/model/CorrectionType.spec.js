/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CorrectionType', function() {
      beforeEach(function() {
        instance = BillingoApiV3.CorrectionType;
      });

      it('should create an instance of CorrectionType', function() {
        // TODO: update the code to test CorrectionType
        expect(instance).to.be.a('object');
      });

      it('should have the property advance', function() {
        expect(instance).to.have.property('advance');
        expect(instance.advance).to.be("advance");
      });

      it('should have the property canceled', function() {
        expect(instance).to.have.property('canceled');
        expect(instance.canceled).to.be("canceled");
      });

      it('should have the property cancellation', function() {
        expect(instance).to.have.property('cancellation');
        expect(instance.cancellation).to.be("cancellation");
      });

      it('should have the property certOfCompletion', function() {
        expect(instance).to.have.property('certOfCompletion');
        expect(instance.certOfCompletion).to.be("cert_of_completion");
      });

      it('should have the property dCertOfCompletion', function() {
        expect(instance).to.have.property('dCertOfCompletion');
        expect(instance.dCertOfCompletion).to.be("d_cert_of_completion");
      });

      it('should have the property dossier', function() {
        expect(instance).to.have.property('dossier');
        expect(instance.dossier).to.be("dossier");
      });

      it('should have the property draft', function() {
        expect(instance).to.have.property('draft');
        expect(instance.draft).to.be("draft");
      });

      it('should have the property draftOffer', function() {
        expect(instance).to.have.property('draftOffer');
        expect(instance.draftOffer).to.be("draft_offer");
      });

      it('should have the property draftOrderForm', function() {
        expect(instance).to.have.property('draftOrderForm');
        expect(instance.draftOrderForm).to.be("draft_order_form");
      });

      it('should have the property draftWaybill', function() {
        expect(instance).to.have.property('draftWaybill');
        expect(instance.draftWaybill).to.be("draft_waybill");
      });

      it('should have the property invoice', function() {
        expect(instance).to.have.property('invoice');
        expect(instance.invoice).to.be("invoice");
      });

      it('should have the property modification', function() {
        expect(instance).to.have.property('modification');
        expect(instance.modification).to.be("modification");
      });

      it('should have the property modified', function() {
        expect(instance).to.have.property('modified');
        expect(instance.modified).to.be("modified");
      });

      it('should have the property offer', function() {
        expect(instance).to.have.property('offer');
        expect(instance.offer).to.be("offer");
      });

      it('should have the property orderForm', function() {
        expect(instance).to.have.property('orderForm');
        expect(instance.orderForm).to.be("order_form");
      });

      it('should have the property proforma', function() {
        expect(instance).to.have.property('proforma');
        expect(instance.proforma).to.be("proforma");
      });

      it('should have the property receipt', function() {
        expect(instance).to.have.property('receipt');
        expect(instance.receipt).to.be("receipt");
      });

      it('should have the property receiptCancellation', function() {
        expect(instance).to.have.property('receiptCancellation');
        expect(instance.receiptCancellation).to.be("receipt_cancellation");
      });

      it('should have the property waybill', function() {
        expect(instance).to.have.property('waybill');
        expect(instance.waybill).to.be("waybill");
      });

    });
  });

}));
