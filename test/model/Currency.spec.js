/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Currency', function() {
      beforeEach(function() {
        instance = BillingoApiV3.Currency;
      });

      it('should create an instance of Currency', function() {
        // TODO: update the code to test Currency
        expect(instance).to.be.a('object');
      });

      it('should have the property AED', function() {
        expect(instance).to.have.property('AED');
        expect(instance.AED).to.be("AED");
      });

      it('should have the property AUD', function() {
        expect(instance).to.have.property('AUD');
        expect(instance.AUD).to.be("AUD");
      });

      it('should have the property BGN', function() {
        expect(instance).to.have.property('BGN');
        expect(instance.BGN).to.be("BGN");
      });

      it('should have the property BRL', function() {
        expect(instance).to.have.property('BRL');
        expect(instance.BRL).to.be("BRL");
      });

      it('should have the property CAD', function() {
        expect(instance).to.have.property('CAD');
        expect(instance.CAD).to.be("CAD");
      });

      it('should have the property CHF', function() {
        expect(instance).to.have.property('CHF');
        expect(instance.CHF).to.be("CHF");
      });

      it('should have the property CNY', function() {
        expect(instance).to.have.property('CNY');
        expect(instance.CNY).to.be("CNY");
      });

      it('should have the property CZK', function() {
        expect(instance).to.have.property('CZK');
        expect(instance.CZK).to.be("CZK");
      });

      it('should have the property DKK', function() {
        expect(instance).to.have.property('DKK');
        expect(instance.DKK).to.be("DKK");
      });

      it('should have the property EUR', function() {
        expect(instance).to.have.property('EUR');
        expect(instance.EUR).to.be("EUR");
      });

      it('should have the property GBP', function() {
        expect(instance).to.have.property('GBP');
        expect(instance.GBP).to.be("GBP");
      });

      it('should have the property HKD', function() {
        expect(instance).to.have.property('HKD');
        expect(instance.HKD).to.be("HKD");
      });

      it('should have the property HRK', function() {
        expect(instance).to.have.property('HRK');
        expect(instance.HRK).to.be("HRK");
      });

      it('should have the property HUF', function() {
        expect(instance).to.have.property('HUF');
        expect(instance.HUF).to.be("HUF");
      });

      it('should have the property IDR', function() {
        expect(instance).to.have.property('IDR');
        expect(instance.IDR).to.be("IDR");
      });

      it('should have the property ILS', function() {
        expect(instance).to.have.property('ILS');
        expect(instance.ILS).to.be("ILS");
      });

      it('should have the property INR', function() {
        expect(instance).to.have.property('INR');
        expect(instance.INR).to.be("INR");
      });

      it('should have the property ISK', function() {
        expect(instance).to.have.property('ISK');
        expect(instance.ISK).to.be("ISK");
      });

      it('should have the property JPY', function() {
        expect(instance).to.have.property('JPY');
        expect(instance.JPY).to.be("JPY");
      });

      it('should have the property KRW', function() {
        expect(instance).to.have.property('KRW');
        expect(instance.KRW).to.be("KRW");
      });

      it('should have the property MXN', function() {
        expect(instance).to.have.property('MXN');
        expect(instance.MXN).to.be("MXN");
      });

      it('should have the property MYR', function() {
        expect(instance).to.have.property('MYR');
        expect(instance.MYR).to.be("MYR");
      });

      it('should have the property NOK', function() {
        expect(instance).to.have.property('NOK');
        expect(instance.NOK).to.be("NOK");
      });

      it('should have the property NZD', function() {
        expect(instance).to.have.property('NZD');
        expect(instance.NZD).to.be("NZD");
      });

      it('should have the property PHP', function() {
        expect(instance).to.have.property('PHP');
        expect(instance.PHP).to.be("PHP");
      });

      it('should have the property PLN', function() {
        expect(instance).to.have.property('PLN');
        expect(instance.PLN).to.be("PLN");
      });

      it('should have the property RON', function() {
        expect(instance).to.have.property('RON');
        expect(instance.RON).to.be("RON");
      });

      it('should have the property RSD', function() {
        expect(instance).to.have.property('RSD');
        expect(instance.RSD).to.be("RSD");
      });

      it('should have the property RUB', function() {
        expect(instance).to.have.property('RUB');
        expect(instance.RUB).to.be("RUB");
      });

      it('should have the property SEK', function() {
        expect(instance).to.have.property('SEK');
        expect(instance.SEK).to.be("SEK");
      });

      it('should have the property SGD', function() {
        expect(instance).to.have.property('SGD');
        expect(instance.SGD).to.be("SGD");
      });

      it('should have the property THB', function() {
        expect(instance).to.have.property('THB');
        expect(instance.THB).to.be("THB");
      });

      it('should have the property TRY', function() {
        expect(instance).to.have.property('TRY');
        expect(instance.TRY).to.be("TRY");
      });

      it('should have the property UAH', function() {
        expect(instance).to.have.property('UAH');
        expect(instance.UAH).to.be("UAH");
      });

      it('should have the property USD', function() {
        expect(instance).to.have.property('USD');
        expect(instance.USD).to.be("USD");
      });

      it('should have the property ZAR', function() {
        expect(instance).to.have.property('ZAR');
        expect(instance.ZAR).to.be("ZAR");
      });

    });
  });

}));
