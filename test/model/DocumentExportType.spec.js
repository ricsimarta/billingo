/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DocumentExportType', function() {
      beforeEach(function() {
        instance = BillingoApiV3.DocumentExportType;
      });

      it('should create an instance of DocumentExportType', function() {
        // TODO: update the code to test DocumentExportType
        expect(instance).to.be.a('object');
      });

      it('should have the property armada', function() {
        expect(instance).to.have.property('armada');
        expect(instance.armada).to.be("armada");
      });

      it('should have the property awsBatch', function() {
        expect(instance).to.have.property('awsBatch');
        expect(instance.awsBatch).to.be("aws_batch");
      });

      it('should have the property exPanda', function() {
        expect(instance).to.have.property('exPanda');
        expect(instance.exPanda).to.be("ex_panda");
      });

      it('should have the property forintsoft', function() {
        expect(instance).to.have.property('forintsoft');
        expect(instance.forintsoft).to.be("forintsoft");
      });

      it('should have the property hessyn', function() {
        expect(instance).to.have.property('hessyn');
        expect(instance.hessyn).to.be("hessyn");
      });

      it('should have the property ima', function() {
        expect(instance).to.have.property('ima');
        expect(instance.ima).to.be("ima");
      });

      it('should have the property infoteka', function() {
        expect(instance).to.have.property('infoteka');
        expect(instance.infoteka).to.be("infoteka");
      });

      it('should have the property kulcsKonyv', function() {
        expect(instance).to.have.property('kulcsKonyv');
        expect(instance.kulcsKonyv).to.be("kulcs_konyv");
      });

      it('should have the property maxitax', function() {
        expect(instance).to.have.property('maxitax');
        expect(instance.maxitax).to.be("maxitax");
      });

      it('should have the property nagyMachinator', function() {
        expect(instance).to.have.property('nagyMachinator');
        expect(instance.nagyMachinator).to.be("nagy_machinator");
      });

      it('should have the property navPtgszlah', function() {
        expect(instance).to.have.property('navPtgszlah');
        expect(instance.navPtgszlah).to.be("nav_ptgszlah");
      });

      it('should have the property navStatus', function() {
        expect(instance).to.have.property('navStatus');
        expect(instance.navStatus).to.be("nav_status");
      });

      it('should have the property navXml', function() {
        expect(instance).to.have.property('navXml');
        expect(instance.navXml).to.be("nav_xml");
      });

      it('should have the property navXmlAlias', function() {
        expect(instance).to.have.property('navXmlAlias');
        expect(instance.navXmlAlias).to.be("nav_xml_alias");
      });

      it('should have the property novitax', function() {
        expect(instance).to.have.property('novitax');
        expect(instance.novitax).to.be("novitax");
      });

      it('should have the property proformaOutstanding', function() {
        expect(instance).to.have.property('proformaOutstanding');
        expect(instance.proformaOutstanding).to.be("proforma_outstanding");
      });

      it('should have the property relax', function() {
        expect(instance).to.have.property('relax');
        expect(instance.relax).to.be("relax");
      });

      it('should have the property rlb', function() {
        expect(instance).to.have.property('rlb');
        expect(instance.rlb).to.be("rlb");
      });

      it('should have the property rlb60', function() {
        expect(instance).to.have.property('rlb60');
        expect(instance.rlb60).to.be("rlb60");
      });

      it('should have the property rlbDoubleEntry', function() {
        expect(instance).to.have.property('rlbDoubleEntry');
        expect(instance.rlbDoubleEntry).to.be("rlb_double_entry");
      });

      it('should have the property simpleCsv', function() {
        expect(instance).to.have.property('simpleCsv');
        expect(instance.simpleCsv).to.be("simple_csv");
      });

      it('should have the property simpleExcel', function() {
        expect(instance).to.have.property('simpleExcel');
        expect(instance.simpleExcel).to.be("simple_excel");
      });

      it('should have the property simpleExcelItems', function() {
        expect(instance).to.have.property('simpleExcelItems');
        expect(instance.simpleExcelItems).to.be("simple_excel_items");
      });

      it('should have the property tensoft', function() {
        expect(instance).to.have.property('tensoft');
        expect(instance.tensoft).to.be("tensoft");
      });

      it('should have the property tensoft29Dot65', function() {
        expect(instance).to.have.property('tensoft29Dot65');
        expect(instance.tensoft29Dot65).to.be("tensoft_29_dot_65");
      });

    });
  });

}));
