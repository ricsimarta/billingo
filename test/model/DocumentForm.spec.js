/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('DocumentForm', function() {
      beforeEach(function() {
        instance = BillingoApiV3.DocumentForm;
      });

      it('should create an instance of DocumentForm', function() {
        // TODO: update the code to test DocumentForm
        expect(instance).to.be.a('object');
      });

      it('should have the property electronic', function() {
        expect(instance).to.have.property('electronic');
        expect(instance.electronic).to.be("electronic");
      });

      it('should have the property paper', function() {
        expect(instance).to.have.property('paper');
        expect(instance.paper).to.be("paper");
      });

    });
  });

}));
