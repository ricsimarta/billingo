/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Feature', function() {
      beforeEach(function() {
        instance = BillingoApiV3.Feature;
      });

      it('should create an instance of Feature', function() {
        // TODO: update the code to test Feature
        expect(instance).to.be.a('object');
      });

      it('should have the property apiLimitBasic', function() {
        expect(instance).to.have.property('apiLimitBasic');
        expect(instance.apiLimitBasic).to.be("api_limit_basic");
      });

      it('should have the property apiLimitPro', function() {
        expect(instance).to.have.property('apiLimitPro');
        expect(instance.apiLimitPro).to.be("api_limit_pro");
      });

      it('should have the property apiLimitStandard', function() {
        expect(instance).to.have.property('apiLimitStandard');
        expect(instance.apiLimitStandard).to.be("api_limit_standard");
      });

      it('should have the property banksyncPlus', function() {
        expect(instance).to.have.property('banksyncPlus');
        expect(instance.banksyncPlus).to.be("banksync_plus");
      });

      it('should have the property campaignManagerBasic', function() {
        expect(instance).to.have.property('campaignManagerBasic');
        expect(instance.campaignManagerBasic).to.be("campaign_manager_basic");
      });

      it('should have the property campaignManagerStandard', function() {
        expect(instance).to.have.property('campaignManagerStandard');
        expect(instance.campaignManagerStandard).to.be("campaign_manager_standard");
      });

      it('should have the property ceginfoEnterprise', function() {
        expect(instance).to.have.property('ceginfoEnterprise');
        expect(instance.ceginfoEnterprise).to.be("ceginfo_enterprise");
      });

      it('should have the property ceginfoPro', function() {
        expect(instance).to.have.property('ceginfoPro');
        expect(instance.ceginfoPro).to.be("ceginfo_pro");
      });

      it('should have the property ceginfoStandard', function() {
        expect(instance).to.have.property('ceginfoStandard');
        expect(instance.ceginfoStandard).to.be("ceginfo_standard");
      });

      it('should have the property innovator', function() {
        expect(instance).to.have.property('innovator');
        expect(instance.innovator).to.be("innovator");
      });

      it('should have the property limitIncrease', function() {
        expect(instance).to.have.property('limitIncrease');
        expect(instance.limitIncrease).to.be("limit_increase");
      });

      it('should have the property master', function() {
        expect(instance).to.have.property('master');
        expect(instance.master).to.be("master");
      });

      it('should have the property partnermonitorBasic', function() {
        expect(instance).to.have.property('partnermonitorBasic');
        expect(instance.partnermonitorBasic).to.be("partnermonitor_basic");
      });

      it('should have the property partnermonitorPro', function() {
        expect(instance).to.have.property('partnermonitorPro');
        expect(instance.partnermonitorPro).to.be("partnermonitor_pro");
      });

      it('should have the property partnermonitorStandard', function() {
        expect(instance).to.have.property('partnermonitorStandard');
        expect(instance.partnermonitorStandard).to.be("partnermonitor_standard");
      });

      it('should have the property softpos', function() {
        expect(instance).to.have.property('softpos');
        expect(instance.softpos).to.be("softpos");
      });

      it('should have the property subscriptionBasic', function() {
        expect(instance).to.have.property('subscriptionBasic');
        expect(instance.subscriptionBasic).to.be("subscription_basic");
      });

      it('should have the property subscriptionPro', function() {
        expect(instance).to.have.property('subscriptionPro');
        expect(instance.subscriptionPro).to.be("subscription_pro");
      });

      it('should have the property subscriptionStandard', function() {
        expect(instance).to.have.property('subscriptionStandard');
        expect(instance.subscriptionStandard).to.be("subscription_standard");
      });

      it('should have the property tendermonitorStandard', function() {
        expect(instance).to.have.property('tendermonitorStandard');
        expect(instance.tendermonitorStandard).to.be("tendermonitor_standard");
      });

      it('should have the property tendermonitorVip', function() {
        expect(instance).to.have.property('tendermonitorVip');
        expect(instance.tendermonitorVip).to.be("tendermonitor_vip");
      });

      it('should have the property whitelabel', function() {
        expect(instance).to.have.property('whitelabel');
        expect(instance.whitelabel).to.be("whitelabel");
      });

    });
  });

}));
