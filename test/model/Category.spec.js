/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('Category', function() {
      beforeEach(function() {
        instance = BillingoApiV3.Category;
      });

      it('should create an instance of Category', function() {
        // TODO: update the code to test Category
        expect(instance).to.be.a('object');
      });

      it('should have the property advertisement', function() {
        expect(instance).to.have.property('advertisement');
        expect(instance.advertisement).to.be("advertisement");
      });

      it('should have the property development', function() {
        expect(instance).to.have.property('development');
        expect(instance.development).to.be("development");
      });

      it('should have the property other', function() {
        expect(instance).to.have.property('other');
        expect(instance.other).to.be("other");
      });

      it('should have the property overheads', function() {
        expect(instance).to.have.property('overheads');
        expect(instance.overheads).to.be("overheads");
      });

      it('should have the property service', function() {
        expect(instance).to.have.property('service');
        expect(instance.service).to.be("service");
      });

      it('should have the property stock', function() {
        expect(instance).to.have.property('stock');
        expect(instance.stock).to.be("stock");
      });

      it('should have the property tangibleAssets', function() {
        expect(instance).to.have.property('tangibleAssets');
        expect(instance.tangibleAssets).to.be("tangible_assets");
      });

    });
  });

}));
