/*
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * OpenAPI spec version: 3.0.14
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.35
 *
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PaymentMethod', function() {
      beforeEach(function() {
        instance = BillingoApiV3.PaymentMethod;
      });

      it('should create an instance of PaymentMethod', function() {
        // TODO: update the code to test PaymentMethod
        expect(instance).to.be.a('object');
      });

      it('should have the property aruhitel', function() {
        expect(instance).to.have.property('aruhitel');
        expect(instance.aruhitel).to.be("aruhitel");
      });

      it('should have the property bankcard', function() {
        expect(instance).to.have.property('bankcard');
        expect(instance.bankcard).to.be("bankcard");
      });

      it('should have the property barion', function() {
        expect(instance).to.have.property('barion');
        expect(instance.barion).to.be("barion");
      });

      it('should have the property barter', function() {
        expect(instance).to.have.property('barter');
        expect(instance.barter).to.be("barter");
      });

      it('should have the property cash', function() {
        expect(instance).to.have.property('cash');
        expect(instance.cash).to.be("cash");
      });

      it('should have the property cashOnDelivery', function() {
        expect(instance).to.have.property('cashOnDelivery');
        expect(instance.cashOnDelivery).to.be("cash_on_delivery");
      });

      it('should have the property coupon', function() {
        expect(instance).to.have.property('coupon');
        expect(instance.coupon).to.be("coupon");
      });

      it('should have the property eloreUtalas', function() {
        expect(instance).to.have.property('eloreUtalas');
        expect(instance.eloreUtalas).to.be("elore_utalas");
      });

      it('should have the property epKartya', function() {
        expect(instance).to.have.property('epKartya');
        expect(instance.epKartya).to.be("ep_kartya");
      });

      it('should have the property kompenzacio', function() {
        expect(instance).to.have.property('kompenzacio');
        expect(instance.kompenzacio).to.be("kompenzacio");
      });

      it('should have the property levonas', function() {
        expect(instance).to.have.property('levonas');
        expect(instance.levonas).to.be("levonas");
      });

      it('should have the property onlineBankcard', function() {
        expect(instance).to.have.property('onlineBankcard');
        expect(instance.onlineBankcard).to.be("online_bankcard");
      });

      it('should have the property other', function() {
        expect(instance).to.have.property('other');
        expect(instance.other).to.be("other");
      });

      it('should have the property paylike', function() {
        expect(instance).to.have.property('paylike');
        expect(instance.paylike).to.be("paylike");
      });

      it('should have the property payoneer', function() {
        expect(instance).to.have.property('payoneer');
        expect(instance.payoneer).to.be("payoneer");
      });

      it('should have the property paypal', function() {
        expect(instance).to.have.property('paypal');
        expect(instance.paypal).to.be("paypal");
      });

      it('should have the property paypalUtolag', function() {
        expect(instance).to.have.property('paypalUtolag');
        expect(instance.paypalUtolag).to.be("paypal_utolag");
      });

      it('should have the property payu', function() {
        expect(instance).to.have.property('payu');
        expect(instance.payu).to.be("payu");
      });

      it('should have the property pickPackPont', function() {
        expect(instance).to.have.property('pickPackPont');
        expect(instance.pickPackPont).to.be("pick_pack_pont");
      });

      it('should have the property postaiCsekk', function() {
        expect(instance).to.have.property('postaiCsekk');
        expect(instance.postaiCsekk).to.be("postai_csekk");
      });

      it('should have the property postautalvany', function() {
        expect(instance).to.have.property('postautalvany');
        expect(instance.postautalvany).to.be("postautalvany");
      });

      it('should have the property skrill', function() {
        expect(instance).to.have.property('skrill');
        expect(instance.skrill).to.be("skrill");
      });

      it('should have the property szepCard', function() {
        expect(instance).to.have.property('szepCard');
        expect(instance.szepCard).to.be("szep_card");
      });

      it('should have the property transferwise', function() {
        expect(instance).to.have.property('transferwise');
        expect(instance.transferwise).to.be("transferwise");
      });

      it('should have the property upwork', function() {
        expect(instance).to.have.property('upwork');
        expect(instance.upwork).to.be("upwork");
      });

      it('should have the property utalvany', function() {
        expect(instance).to.have.property('utalvany');
        expect(instance.utalvany).to.be("utalvany");
      });

      it('should have the property valto', function() {
        expect(instance).to.have.property('valto');
        expect(instance.valto).to.be("valto");
      });

      it('should have the property wireTransfer', function() {
        expect(instance).to.have.property('wireTransfer');
        expect(instance.wireTransfer).to.be("wire_transfer");
      });

    });
  });

}));
